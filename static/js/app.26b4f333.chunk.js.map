{"version":3,"sources":["web-build/register-service-worker.js","App.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","App","props","ocr_api_endpoint","getCameraRollPermissionAsync","a","async","Constants","platform","ios","Permissions","askAsync","CAMERA_ROLL","status","alert","getCameraPermissionAsync","CAMERA","handleSubmitFile","state","image","setState","loading","img","document","getElementById","fetch","src","res","blob","file","File","log","formData","FormData","append","axios","post","headers","result","data","err","pickImage","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","pickImageFromCamera","base64","imageFile","this","style","flex","alignItems","justifyContent","title","onPress","Fragment","id","uri","width","height","animating","React","Component"],"mappings":"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","file":"static/js/app.26b4f333.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/hokminglee0803/ocrDemo/expo-service-worker.js', { scope: '/hokminglee0803/ocrDemo/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { Text, View ,Button,  ActivityIndicator,StyleSheet} from 'react-native';\nimport Constants from 'expo-constants';\nimport axios from \"axios\";\nimport * as ImagePicker from 'expo-image-picker';\n\nclass App extends React.Component{\n\n  ocr_api_endpoint = `https://ocr-ypkwsijlva-de.a.run.app/ocr`;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        imageFile: null,\n        result: '',\n        image: null,\n        loading: false\n    }\n  }\n\n  componentDidMount() {\n    this.getCameraRollPermissionAsync();\n    this.getCameraPermissionAsync();\n  }\n      getCameraRollPermissionAsync = async () => {\n      if (Constants.platform.ios)  {\n        const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n          if (status !== 'granted') {\n            alert('Sorry, we need camera roll permissions to make this work!');\n          }\n        }\n      };\n\n      getCameraPermissionAsync = async () => {\n        if (Constants.platform.ios)  {\n          const { status } = await Permissions.askAsync(Permissions.CAMERA);\n            if (status !== 'granted') {\n              alert('Sorry, we need camera roll permissions to make this work!');\n            }\n          }\n        };\n\n    handleSubmitFile = async() => {\n      if (this.state.image !== null){\n      \n        this.setState({loading: true});\n        const img = document.getElementById('id')\n        \n      fetch(img.src)\n      .then(res => res.blob())\n      .then(blob => {\n        const file = new File([blob], 'dot.png', blob)\n        console.log(file)\n\n        let formData = new FormData();\n          formData.append('file',file );\n          axios.post(\n              this.ocr_api_endpoint,\n              formData,\n              {\n                  headers: {\n                      \"Content-type\": \"multipart/form-data\",\n                  },                    \n              }\n          )\n          .then(res => {\n            this.setState({\n              result: res.data,\n              loading: false\n            })\n          })\n          .catch(err => {\n            this.setState({\n              result: \"Unexpected Error, please try with other photo\",\n              loading: false\n            })\n          })\n      })\n      }\n      \n  }\n\n  pickImage = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n      });\n      if (!result.cancelled) {\n        this.setState({ image: result });\n      }\n\n      console.log(result);\n    } catch (E) {\n      console.log(E);\n    }\n  };\n\n  pickImageFromCamera = async () => {\n    try {\n      let result = await ImagePicker.launchCameraAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        base64 : true,\n        aspect: [4, 3],\n        quality: 1,\n      });\n      if (!result.cancelled) {\n        this.setState({ image: result });\n      }\n\n      console.log(result);\n    } catch (E) {\n      console.log(E);\n    }\n  };\n    \n    \n    render() { \n      let { image,result,loading} = this.state;\n      return (\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Text>OCR Demo Application</Text>\n          <StatusBar style=\"auto\" /> \n          <Button title=\"Pick an image from Camera roll\" onPress={this.pickImage}  />\n          <Button title=\"Pick an image from Camera\" onPress={this.pickImageFromCamera} />\n          {image && \n          <React.Fragment>\n            <Button title=\"Convert\" onPress={() => this.handleSubmitFile()} />\n            <img id=\"id\" src={image.uri} style={{ width: 200, height: 200 }}/>\n          </React.Fragment>\n          }\n          <ActivityIndicator\n            animating={loading} />\n          <View>\n            {\n              result !== ''?\n              <Text> {result}</Text>\n                :null\n            }\n          </View>\n        </View>\n      );\n    }\n}\n\nexport default App;"],"sourceRoot":""}